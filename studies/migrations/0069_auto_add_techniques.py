# Generated by Django 5.1.5 on 2025-02-23 16:29
from django.core.exceptions import FieldError, EmptyResultSet
from django.db import migrations
import logging

logger = logging.getLogger("Contrast2")


def add_technique_to_findings(apps, schema_editor):
    Technique = apps.get_model("studies", "Technique")
    FindingTag = apps.get_model("studies", "FindingTag")

    experiments_ids = [717, 718, 719, 720, 721, 723, 734, 735, 737, 738, 741, 746, 748,
                       751, 755, 756, 757, 758, 760, 761, 764, 765, 767, 773, 777, 783,
                       784, 786, 801, 802, 808, 809, 810, 812, 815, 820, 829, 830, 831,
                       834, 835, 838, 843, 845, 846, 847, 853, 854, 866, 868, 869, 870,
                       880, 884, 888, 889, 894, 896, 898, 905, 916, 917, 918, 922, 923,
                       924, 929, 933, 934, 946, 953, 954, 956, 966, 972, 973, 976, 722,
                       754, 977, 978, 817, 985, 988, 839, 852, 855, 864, 886, 890, 904,
                       925, 926, 927, 936, 983]

    try:
        intracranial_eeg_technique = Technique.objects.get(name="Intracranial EEG")
    except Technique.DoesNotExist:
        raise Exception("Required technique 'Intracranial EEG' not found")
    try:
        fmri_technique = Technique.objects.get(name="fMRI")
    except Technique.DoesNotExist:
        raise Exception("Required technique 'fMRI' not found")

    try:
        intracranial_eeg_findings_to_modify = (
            FindingTag.objects.filter(experiment__in=experiments_ids)
            .filter(experiment__techniques=intracranial_eeg_technique)
            .filter(technique__isnull=False)
        )
        fmri_findings_to_modify = (
            FindingTag.objects.filter(experiment__in=experiments_ids)
            .filter(experiment__techniques=fmri_technique)
            .filter(technique__isnull=False)
        )
    except EmptyResultSet:
        raise Exception("no findings to modify")

    for finding in intracranial_eeg_findings_to_modify:
        try:
            finding.technique = intracranial_eeg_technique
            finding.save()
            logger.info(f"Added Intracranial EEG technique to Finding {finding.id}")
        except FieldError:
            raise Exception("Field 'technique' does not exist")

    for finding in fmri_findings_to_modify:
        try:
            finding.technique = fmri_technique
            finding.save()
            logger.info(f"Added fMRI technique to Finding {finding.id}")
        except FieldError:
            raise Exception("Field 'technique' does not exist")


class Migration(migrations.Migration):
    dependencies = [
        ("studies", "0068_auto_remove_redundant_techniques"),
    ]

    operations = [
        migrations.RunPython(add_technique_to_findings),
    ]
