# Generated by Django 4.1.4 on 2023-01-09 13:54

from django.db import migrations

from configuration.initial_setup import paradigms, task_types, techniques, modalities, consciousness_measure_types, \
    consciousness_measure_phases


def bootstrap_type_models(apps, schema_editor):
    ConsciousnessMeasureType = apps.get_model("studies", "ConsciousnessMeasureType")
    for measure_type in consciousness_measure_types:
        ConsciousnessMeasureType.objects.get_or_create(name=measure_type)

    ConsciousnessMeasurePhaseType = apps.get_model("studies", "ConsciousnessMeasurePhaseType")
    for measure_phase in consciousness_measure_phases:
        ConsciousnessMeasurePhaseType.objects.get_or_create(name=measure_phase)

    Theory = apps.get_model("studies", "Theory")
    for theory in ["Global Workspace",
                   "Integrated Information",
                   "Higher Order Thought",
                   "First Order & Predictive Processing",
                   "Other"]:
        Theory.objects.get_or_create(name=theory)

    global_workspace_theory = Theory.objects.get(name='Global Workspace')
    integrated_information = Theory.objects.get(name='Integrated Information')
    higher_order_thought = Theory.objects.get(name='Higher Order Thought')
    first_order_and_predictive_processing = Theory.objects.get(name='First Order & Predictive Processing')

    Theory.objects.get_or_create(name='GNW', parent=global_workspace_theory)
    Theory.objects.get_or_create(name='IIT', parent=integrated_information)
    Theory.objects.get_or_create(name='HOT', parent=higher_order_thought)
    Theory.objects.get_or_create(name='RPT', parent=first_order_and_predictive_processing)

    ModalityType = apps.get_model("studies", "ModalityType")
    for modality in modalities:
        ModalityType.objects.get_or_create(name=modality)

    Technique = apps.get_model("studies", "Technique")
    for technique in techniques:
        Technique.objects.get_or_create(name=technique)

    TaskType = apps.get_model("studies", "TaskType")
    for task_type in task_types:
        TaskType.objects.get_or_create(name=task_type)

    Paradigm = apps.get_model("studies", "Paradigm")
    for paradigm in paradigms["parent_paradigms"]:
        Paradigm.objects.get_or_create(name=paradigm)

    for paradigm in paradigms["Abnormal_Contents_of_Consciousness"]:
        abnormal_contents_of_consciousness = Paradigm.objects.get(name='Abnormal Contents of Consciousness')
        Paradigm.objects.get_or_create(name=paradigm, parent=abnormal_contents_of_consciousness)

    for paradigm in paradigms["Anesthesia"]:
        anesthesia = Paradigm.objects.get(name='Anesthesia')
        Paradigm.objects.get_or_create(name=paradigm, parent=anesthesia)

    for paradigm in paradigms["Attentional_Manipulation"]:
        attentional_manipulation = Paradigm.objects.get(name='Attentional Manipulation')
        Paradigm.objects.get_or_create(name=paradigm, parent=attentional_manipulation)

    for paradigm in paradigms["Case_Study"]:
        case_study = Paradigm.objects.get(name='Case Study')
        Paradigm.objects.get_or_create(name=paradigm, parent=case_study)

    for paradigm in paradigms["Cognitive_Tasks"]:
        cognitive_tasks = Paradigm.objects.get(name='Cognitive Tasks')
        Paradigm.objects.get_or_create(name=paradigm, parent=cognitive_tasks)

    for paradigm in paradigms["Competition_Binocular"]:
        competition_binocular = Paradigm.objects.get(name='Competition (Binocular)')
        Paradigm.objects.get_or_create(name=paradigm, parent=competition_binocular)

    for paradigm in paradigms["Direct_Stimulation"]:
        direct_stimulation = Paradigm.objects.get(name='Direct Stimulation')
        Paradigm.objects.get_or_create(name=paradigm, parent=direct_stimulation)

    for paradigm in paradigms["Disorders_of_Consciousness"]:
        disorders_of_consciousness = Paradigm.objects.get(name='Disorders of Consciousness')
        Paradigm.objects.get_or_create(name=paradigm, parent=disorders_of_consciousness)

    for paradigm in ["Emotional",
                     "Oddball",
                     "Prior Exposure"]:
        expectation = Paradigm.objects.get(name='Expectation')
        Paradigm.objects.get_or_create(name=paradigm, parent=expectation)

    for paradigm in ["Own Name",
                     "Prior Exposure (Familiarity)",
                     "Self-Face"]:
        familiarity = Paradigm.objects.get(name='Familiarity')
        Paradigm.objects.get_or_create(name=paradigm, parent=familiarity)

    for paradigm in paradigms["Illusions"]:
        illusions = Paradigm.objects.get(name='Illusions')
        Paradigm.objects.get_or_create(name=paradigm, parent=illusions)

    imagination = Paradigm.objects.get(name='Imagination')
    Paradigm.objects.get_or_create(name="Motoric", parent=imagination)

    for paradigm in paradigms["Masking"]:
        masking = Paradigm.objects.get(name='Masking')
        Paradigm.objects.get_or_create(name=paradigm, parent=masking)

    for paradigm in ["Ketamine (Psychedelic Drugs)",
                     "Psilocybin"]:
        psychedelic_drugs = Paradigm.objects.get(name='Psychedelic Drugs')
        Paradigm.objects.get_or_create(name=paradigm, parent=psychedelic_drugs)

    for paradigm in paradigms["Sedation"]:
        sedation = Paradigm.objects.get(name='Sedation')
        Paradigm.objects.get_or_create(name=paradigm, parent=sedation)

    for paradigm in ["Brief Presentation",
                     "Coherence Reduction",
                     "Intensity Reduction",
                     "Noise Induction"]:
        stimulus_degradation = Paradigm.objects.get(name='Stimulus Degradation')
        Paradigm.objects.get_or_create(name=paradigm, parent=stimulus_degradation)


class Migration(migrations.Migration):
    dependencies = [
        ('studies', '0004_experiment_type'),
    ]

    operations = [
        migrations.RunPython(bootstrap_type_models, reverse_code=migrations.RunPython.noop)
    ]
