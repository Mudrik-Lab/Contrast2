# Generated by Django 5.1.5 on 2025-02-13 18:44

from django.db import migrations
from studies.services.get_queryset_to_modify import get_queryset_to_modify

import logging

logger = logging.getLogger("Contrast2")


def remove_redundant_eeg_techniques_from_experiments(apps, schema_editor):
    """
    Data migration to remove 'EEG' technique from experiments
    that should have only 'Intracranial EEG' technique.

    """
    MAX_EXPERIMENT_ID = 988  # the highest id of pre-existing experiments
    true_EEG_and_Intracranial_EEG_experiments_ids = [578, 727, 728, 883, 909, 962, 963]
    Experiment = apps.get_model("studies", "Experiment")
    Technique = apps.get_model("studies", "Technique")
    FindingTag = apps.get_model("studies", "FindingTag")

    try:
        intracranial_EEG_technique = Technique.objects.get(name="Intracranial EEG")
    except Technique.DoesNotExist:
        raise Exception("Required technique 'Intracranial EEG' not found")
    try:
        EEG_technique = Technique.objects.get(name="EEG")
    except Technique.DoesNotExist:
        raise Exception("Required technique 'EEG' not found")

    experiments_to_modify = get_queryset_to_modify(
        experiment_model=Experiment,
        max_id=MAX_EXPERIMENT_ID,
        safe_list=true_EEG_and_Intracranial_EEG_experiments_ids,
        first_technique=intracranial_EEG_technique,
        second_technique=EEG_technique,
    )

    for experiment in experiments_to_modify:
        experiment.techniques.remove(EEG_technique)
        experiment.save()
        logger.info(f"Removed EEG technique from Experiment {experiment.id}")

    experiment_count = experiments_to_modify.count()
    logger.info(f"Migration completed. Modified {experiment_count} experiments")

    findings_to_modify = FindingTag.objects.filter(experiment__in=experiments_to_modify)

    for finding in findings_to_modify:
        if finding.techniques__isnull:
            finding.techniques.add(intracranial_EEG_technique)


class Migration(migrations.Migration):
    dependencies = [
        ("studies", "0065_auto_remove_MRI_technique"),
    ]

    operations = [
        migrations.RunPython(remove_redundant_eeg_techniques_from_experiments),
    ]
