# Generated by Django 5.1.5 on 2025-02-13 18:44

from django.db import migrations
from django.db.models import Q

import logging

logger = logging.getLogger("Contrast2")


def remove_redundant_eeg_techniques_from_experiments(apps, schema_editor):
    """
    Data migration to remove 'EEG' technique from experiments
    that should have only 'Intracranial EEG' technique.

    """
    MAX_EXPERIMENT_ID = 989  # the highest id of pre-existing experiments
    true_EEG_and_Intracranial_EEG_experiments_ids = [578, 727, 728, 883, 909, 962, 963]
    Experiment = apps.get_model("studies", "Experiment")
    Technique = apps.get_model("studies", "Technique")

    try:
        intracranial_EEG_technique = Technique.objects.get(name="Intracranial EEG")
    except Technique.DoesNotExist:
        raise Exception("Required technique 'Intracranial EEG' not found")
    try:
        EEG_technique = Technique.objects.get(name="EEG")
    except Technique.DoesNotExist:
        raise Exception("Required technique 'EEG' not found")

    experiments_to_modify = Experiment.objects.filter(
        Q(id__lt=MAX_EXPERIMENT_ID) & Q(techniques=intracranial_EEG_technique) & Q(techniques=EEG_technique)
    ).exclude(id__in=true_EEG_and_Intracranial_EEG_experiments_ids)

    for experiment in experiments_to_modify:
        experiment.techniques.remove(EEG_technique)
        experiment.save()
        logger.info(f"Removed EEG technique from Experiment {experiment.id}")

    experiment_count = experiments_to_modify.count()
    logger.info(f"Migration completed. Modified {experiment_count} experiments")


class Migration(migrations.Migration):
    dependencies = [
        ("studies", "0065_auto_remove_MRI_technique"),
    ]

    operations = [
        migrations.RunPython(remove_redundant_eeg_techniques_from_experiments),
    ]
