# Generated by Django 4.1.4 on 2022-12-30 18:32

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('approval_process', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ConsciousnessMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase', models.CharField(max_length=30)),
                ('type', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finding_description', models.CharField(max_length=254)),
                ('type_of_consciousness', models.CharField(choices=[('content', 'Content'), ('state', 'State'), ('both', 'Both')], max_length=20)),
                ('is_reporting', models.CharField(choices=[('report', 'Report'), ('no_report', 'No Report'), ('both', 'Both')], max_length=20)),
                ('theory_driven', models.CharField(choices=[('driven', 'Driven'), ('mentioning', 'Mentioning'), ('both', 'Both')], max_length=20)),
                ('consciousness_measures', models.ManyToManyField(related_name='experiments', to='studies.consciousnessmeasure')),
            ],
        ),
        migrations.CreateModel(
            name='Technique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Theory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='studies.theory')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('type', models.CharField(max_length=30)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='studies.experiment')),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('DOI', models.CharField(max_length=100, unique=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)])),
                ('corresponding_author_email', models.EmailField(max_length=254)),
                ('approval_status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Approved'), (2, 'Rejected')], default=0)),
                ('key_words', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None)),
                ('references', models.TextField(blank=True, null=True)),
                ('funding', models.TextField(blank=True, null=True)),
                ('source_title', models.CharField(blank=True, max_length=200, null=True)),
                ('abbreviated_source_title', models.CharField(blank=True, max_length=200, null=True)),
                ('link', models.URLField()),
                ('publisher', models.CharField(blank=True, max_length=100, null=True)),
                ('abstract', models.TextField(blank=True, null=True)),
                ('countries', django.contrib.postgres.fields.ArrayField(base_field=django_countries.fields.CountryField(max_length=2), size=None)),
                ('affiliations', models.TextField()),
                ('approval_process', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='approval_process.approvalprocess')),
                ('authors', models.ManyToManyField(related_name='studies', to='studies.author')),
            ],
        ),
        migrations.CreateModel(
            name='Stimulus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('sub_category', models.CharField(blank=True, max_length=50, null=True)),
                ('modality', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration', models.PositiveBigIntegerField(blank=True, null=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stimuli', to='studies.experiment')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('health_adults', 'Healthy Adults'), ('children', 'Children'), ('patients', 'Patients'), ('non_human', 'Non Human'), ('computer', 'Computer')], max_length=30)),
                ('total_size', models.IntegerField()),
                ('size_included', models.IntegerField()),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='studies.experiment')),
            ],
        ),
        migrations.CreateModel(
            name='Paradigm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_paradigm', to='studies.paradigm')),
            ],
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('notes', models.TextField()),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measures', to='studies.experiment')),
            ],
        ),
        migrations.CreateModel(
            name='Interpretation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('pro', 'Pro'), ('challenges', 'Challenges'), ('neutral', 'Neutral')], max_length=30)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studies.experiment')),
                ('theory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studies.theory')),
            ],
        ),
        migrations.CreateModel(
            name='FindingTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('onset', models.PositiveBigIntegerField(blank=True, null=True)),
                ('offset', models.PositiveBigIntegerField(blank=True, null=True)),
                ('band_lower_bound', models.PositiveBigIntegerField(blank=True, null=True)),
                ('band_higher_bound', models.PositiveBigIntegerField(blank=True, null=True)),
                ('AAL_atlas_tag', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('analysis_type', models.CharField(blank=True, choices=[('negative', 'Negative'), ('positive', 'Positive')], max_length=100, null=True)),
                ('correlation_sign', models.CharField(blank=True, max_length=100, null=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finding_tags', to='studies.experiment')),
                ('technique', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='findings_tags', to='studies.technique')),
            ],
        ),
        migrations.AddField(
            model_name='experiment',
            name='interpretations',
            field=models.ManyToManyField(related_name='experiments_interpretations', through='studies.Interpretation', to='studies.theory'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='paradigms',
            field=models.ManyToManyField(related_name='experiments', to='studies.paradigm'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='study',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='studies.study'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='techniques',
            field=models.ManyToManyField(related_name='experiments', to='studies.technique'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='theory_driven_theories',
            field=models.ManyToManyField(related_name='experiments_driven', to='studies.theory'),
        ),
    ]
